---

# project information
project_name: firefox
project_url: "https://www.mozilla.org/en-US/firefox/"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/firefox-logo.png"
project_blurb: "[Firefox]({{ project_url }}) Browser, also known as Mozilla Firefox or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, the Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_categories: "Web Browser"
project_blurb_optional_extras_enabled: false
# supported architectures
available_architectures:
  - {arch: "{{ arch_x86_64 }}", tag: "latest"}
  - {arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
# development version
development_versions: true
development_versions_items:
  - {tag: "latest", desc: "Latest releases using the selkies base"}
  - {tag: "kasm", desc: "Latest releases using the kasmvnc base"}
# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - {vol_path: "/config", vol_host_path: "/path/to/{{ project_name }}/config", desc: "Users home directory in the container, stores local files and settings"}
param_usage_include_ports: true
param_ports:
  - {external_port: "3000", internal_port: "3000", port_desc: "Firefox desktop gui."}
  - {external_port: "3001", internal_port: "3001", port_desc: "Firefox desktop gui HTTPS."}
custom_params:
  - {name: "shm-size", name_compose: "shm_size", value: "1gb", desc: "This is needed for any modern website to function like youtube."}
# optional variables
opt_param_usage_include_env: true
opt_param_env_vars:
  - {env_var: "FIREFOX_CLI", env_value: "https://www.linuxserver.io/", desc: "Specify one or multiple Firefox CLI flags, this string will be passed to the application in full."}
opt_security_opt_param: true
opt_security_opt_param_vars:
  - {run_var: "seccomp=unconfined", compose_var: "seccomp:unconfined", desc: "For Docker Engine only, many modern gui apps need this to function on older hosts as syscalls are unknown to Docker."}
# Kasm blurb settings
kasm_blurb: true
show_nvidia: true
external_http_port: "3000"
external_https_port: "3001"
noto_fonts: "fonts-noto-cjk"
# application setup block
app_setup_block_enabled: true
app_setup_block: |
  The application can be accessed at:

  * http://yourhost:3000/
  * https://yourhost:3001/
# init diagram
init_diagram: |
  "firefox:latest": {
    docker-mods
    base {
      fix-attr +\nlegacy cont-init
    }
    docker-mods -> base
    legacy-services
    custom services
    init-services -> legacy-services
    init-services -> custom services
    custom services -> legacy-services
    legacy-services -> ci-service-check
    init-migrations -> init-adduser
    init-os-end -> init-config
    init-selkies-end -> init-config
    init-config -> init-config-end
    init-crontab-config -> init-config-end
    init-config -> init-crontab-config
    init-mods-end -> init-custom-files
    init-adduser -> init-device-perms
    base -> init-envfile
    base -> init-migrations
    init-config-end -> init-mods
    init-mods-package-install -> init-mods-end
    init-mods -> init-mods-package-install
    init-selkies -> init-nginx
    init-adduser -> init-os-end
    init-device-perms -> init-os-end
    init-envfile -> init-os-end
    init-os-end -> init-selkies
    init-nginx -> init-selkies-config
    init-video -> init-selkies-end
    init-custom-files -> init-services
    init-selkies-config -> init-video
    init-services -> svc-cron
    svc-cron -> legacy-services
    init-services -> svc-de
    svc-nginx -> svc-de
    svc-selkies -> svc-de
    svc-xorg -> svc-de
    svc-de -> legacy-services
    init-services -> svc-docker
    svc-de -> svc-docker
    svc-docker -> legacy-services
    init-services -> svc-nginx
    svc-nginx -> legacy-services
    init-services -> svc-pulseaudio
    svc-pulseaudio -> legacy-services
    init-services -> svc-selkies
    svc-nginx -> svc-selkies
    svc-pulseaudio -> svc-selkies
    svc-xorg -> svc-selkies
    svc-selkies -> legacy-services
    init-services -> svc-xorg
    svc-xorg -> legacy-services
  }
  Base Images: {
    "baseimage-selkies:ubuntunoble" <- "baseimage-ubuntu:noble"
  }
  "firefox:latest" <- Base Images
# changelog
changelogs:
  - {date: "25.09.24:", desc: "Rebase to Ubuntu Noble."}
  - {date: "23.05.24:", desc: "Rebase to Alpine 3.20."}
  - {date: "13.02.24:", desc: "Add ability to pass CLI args to Firefox."}
  - {date: "10.02.24:", desc: "Update Readme with new env vars and ingest proper PWA icon."}
  - {date: "01.01.24:", desc: "Rebase to Alpine 3.19."}
  - {date: "13.05.23:", desc: "Rebase to Alpine 3.18."}
  - {date: "18.03.23:", desc: "Rebase to KasmVNC base image."}
  - {date: "21.10.22:", desc: "Rebase to Alpine 3.16, migrate to s6v3."}
  - {date: "23.12.21:", desc: "Rebase to Alpine 3.15, stop using ESR."}
  - {date: "26.09.21:", desc: "Rebase to Alpine 3.14."}
  - {date: "19.04.21:", desc: "Initial release."}
